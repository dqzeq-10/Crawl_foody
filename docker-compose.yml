services:
  # Database service
  db:
    image: mysql:8.0
    container_name: db
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init_db:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=db_crawl
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - foody-network

  # Database API service
  db-api:
    build:
      context: ./db_api
    container_name: db-api
    hostname: db-api
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - WAIT_FOR_DB=1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - foody-network

  # Crawler service
  crawler:
    build:
      context: ./crawler
    container_name: crawler
    volumes:
      - landing_data:/app/landing_zone
      - ./landing_zone:/host_landing_zone
    depends_on:
      db-api:
        condition: service_healthy
    networks:
      - foody-network

  # Data Ingestion service
  data-ingestion:
    build:
      context: ./data_ingestion
    container_name: data-ingestion
    volumes:
      - landing_data:/app/landing_zone
    depends_on:
      crawler:
        condition: service_started
      db-api:
        condition: service_healthy
    links:
      - db-api
    networks:
      - foody-network

  # API Gateway service
  api-gateway:
    build:
      context: ./api_gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      db-api:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "sh", "health_check.sh" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - foody-network

# Dịch vụ web-page cũng sẽ được triển khai sau
#  web-page:
#    build:
#      context: ./web_page
#    ports:
#      - "3000:3000"
#    depends_on:
#      - api-gateway
#    networks:
#      - foody-network

# Define a custom network for all services
networks:
  foody-network:
    driver: bridge

# Define named volumes
volumes:
  landing_data:
  mysql_data:
    name: mysql_data_persistent
